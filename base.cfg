[buildout]
extensions = mr.developer
package-name =
    openprocurement.documentservice
    openprocurement.storage.s3

auto-checkout = ${:package-name}
parts =
    scripts
    circus
    circusd
    circusctl
    circus.ini
    service.ini
eggs =
    chaussette
    request_id_middleware
    server_cookie_middleware
    ${:package-name}
find-links =
    http://op:x9W3jZ@dist.quintagroup.com/op/

[remotes]
gh = https://github.com/
gh_push = git@github.com:
opgh = ${remotes:gh}openprocurement/openprocurement
opgh_push = ${remotes:gh_push}openprocurement/openprocurement

[sources]
openprocurement.documentservice = git ${remotes:opgh}.documentservice.git pushurl=${remotes:opgh_push}.documentservice.git
openprocurement.storage.s3 = git ${remotes:opgh}.storage.s3.git pushurl=${remotes:opgh_push}.storage.s3.git

[config-from-template]
recipe = collective.recipe.template[genshi]:genshi
input = ${buildout:directory}/templates/${:_buildout_section_name_}
output = ${buildout:directory}/etc/${:_buildout_section_name_}

[scripts]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = python_interpreter
scripts = chaussette

[circus]
recipe = zc.recipe.egg
eggs =
    circus
    circus-web
interpreter =
scripts =
    circusd-stats
    circus-top
    circus-plugin
    circushttpd

[circusd]
<=circus
initialization =
    sys.argv[1:1] = ('${buildout:directory}/etc/circus.ini').split()
scripts = circusd

[circusctl]
<=circus
initialization =
    sys.argv[1:1] = ('--endpoint ${circus.ini:endpoint}').split()
scripts = circusctl

[circus.ini]
<= config-from-template
service = True
statsd =
service_port = 6543
service_host = 0.0.0.0
endpoint = ipc://${buildout:directory}/var/circus_endpoint
pubsub_endpoint = ipc://${buildout:directory}/var/circus_pubsub
timezone = Europe/Kiev
spawn = 512
app_key = circus

[service.ini]
<= config-from-template
debug = false
auth_file = ${buildout:directory}/auth.ini
exc_logger = 1
storage = s3
s3.bucket =
s3.access_key =
s3.secret_key =

[awscli]
recipe = zc.recipe.egg
scripts = aws

[s3cmd]
recipe = zc.recipe.egg
scripts = s3cmd

[logrotate.conf]
<= config-from-template
uploader = awscli
host =
region =
logs_bucket =
logs_dir =
aws_access_key = ${service.ini:s3.access_key}
aws_secret_key = ${service.ini:s3.secret_key}

[logrotate-hourly]
recipe = z3c.recipe.usercrontab
times = @hourly
command = /usr/sbin/logrotate --state ${buildout:directory}/var/logrotate.status ${logrotate.conf:output} >>${buildout:directory}/var/log/logrotate.log 2>&1

[autostart]
recipe = z3c.recipe.usercrontab
times = @reboot
command = ${buildout:directory}/bin/circusd --daemon --pidfile ${buildout:directory}/circus.pid

[docs]
recipe = collective.recipe.sphinxbuilder
eggs =
    ${buildout:package-name}
    sphinxcontrib-httpdomain
    sphinx_rtd_theme
source =
    ${buildout:directory}/src/openprocurement.documentservice/docs/source
